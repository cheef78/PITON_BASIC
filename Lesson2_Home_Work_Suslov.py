__author__ = 'Суслов Олег Александрович'

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

print ("Решение первой задачи уровня Normal")
print ()
import math
start_list = [25, -15, 8, 81, -25, 225, 4, 18, 14, 21]
end_list=[]
count = 0
while count < len(start_list):
    if start_list[count]>0 and (math.sqrt(start_list[count])-(math.sqrt(start_list[count])//1))==0:
        end_list.append(int(math.sqrt(start_list[count])))
    count = count+1
print ("Исходный список = ", start_list)
print()
print ("Итоговый список = ", end_list)


#Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)        
print ()
print ()
print ()
print ("Решение второй задачи уровня Normal")
print ()
date=[]
day=[]
month=[]
year = []
date_s = ['Первое', 'Второе', 'Третье', 'Четвертое', 'Пятое', 'Шестое', 'Седьмое', 'Восьмое', 'Девятое', 'Десятое', 'Одиннадцатое', 'Двенадцатое', 'Тринадцатое', 'Четырнадцатое', 'Пятнадцатое', 'Шестнадцатое', 'Семнадцатое', 'Восемнадцатое', 'Девятнадцатое', 'Двадцатое', 'Двадцать первое', 'Двадцать второе', 'Двадцать третье', 'Двадцать четвертое', 'Двадцать пятое', 'Двадцать шестое', 'Двадцать седьмое', 'Двадцать восьмое', 'Двадцать девятое', 'Тридцатое', 'Тридцать первое']
month_s=['января','февраля','марта','апреля','мая','июня','июля','августа','сентября','октября','ноября','декабря']
date = input ("Введите дату в формате дд.мм.гггг : ")
#Очень чесались руки встроить проверку ввода правильности даты, но посидел, попил чаю, и все прошло :)
day = date[0]+date[1]
month = date[3]+date[4]
year = date[6]+date[7]+date[8]+date[9]
print ()
print ("Исходная дата в формате дд.мм.гггг = ", date)
print ()
print ("Исходная дата в текстовом формате = " + date_s[int(day)-1]+" "+ month_s[int(month)-1]+" "+str(year)+" года")


# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random
print ()
print ()
print ()
print ("Решение третьей задачи уровня Normal")
print ()
import random
spisok=[]
n = int(input ("Введите необходимое количество элементов в случайном списке: "))
print ()
count =0
while count<n:
        spisok.append(random.randint(-100,100))
        count = count+1
print ("Итоговый список, состоящий из " + str(n)+" случайных элементов: ",spisok)

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

print ()
print ()
print ()
print ("Решение четвертой задачи уровня Normal")
print ()
lst = [1, 2, 4, 5, 6, 2, 5, 2,5,10,10,10]
lst2=[]
lst3=[]
print ("Исходный список для преобразований =: ",lst)
print ()

lst = sorted(lst)
for i in range(0,(len(lst)-1)):
    if lst[i]!=lst[i+1]:
       lst2.append(lst[i])
lst2.append(lst[len(lst)-1])
print ("Список, содержаший неповторяющиеся элементы исходного списка =: ",lst2)
print ()

for i in range(0,(len(lst)-1)):
    if lst.count(lst[i])==1:
        lst3.append(lst[i])

print ("Список, содержаший элементы исходного списка, которые не имеют повторений =: ",lst3)
print ()

